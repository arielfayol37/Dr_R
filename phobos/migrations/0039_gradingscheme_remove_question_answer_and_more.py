# Generated by Django 4.2.3 on 2023-10-12 21:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('phobos', '0038_expressionanswer_sufface_floatanswer_sufface_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_points', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('mcq_max_num_attempts', models.IntegerField(default=4)),
                ('struct_max_num_attempts', models.IntegerField(default=5)),
            ],
        ),
        migrations.RemoveField(
            model_name='question',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='question',
            name='deduct_per_attempt',
        ),
        migrations.RemoveField(
            model_name='question',
            name='difficulty_level',
        ),
        migrations.RemoveField(
            model_name='question',
            name='due_date',
        ),
        migrations.RemoveField(
            model_name='question',
            name='margin_error',
        ),
        migrations.RemoveField(
            model_name='question',
            name='max_num_attempts',
        ),
        migrations.RemoveField(
            model_name='question',
            name='num_points',
        ),
        migrations.RemoveField(
            model_name='question',
            name='timestamp',
        ),
        migrations.CreateModel(
            name='QuestionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_points', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('max_num_attempts', models.IntegerField(default=5)),
                ('deduct_per_attempt', models.FloatField(blank=True, default=0.05, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('margin_error', models.FloatField(blank=True, default=0.03, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('difficulty_level', models.CharField(choices=[('EASY', 'Easy'), ('MEDIUM', 'Medium'), ('DIFFICULT', 'Difficult')], default='MEDIUM', max_length=10)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='phobos.question')),
            ],
        ),
    ]
